# WebApp 1 demo

apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: node-webapp
    app.kubernetes.io/name: node-webapp
  name: node-webapp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-webapp-deployment
  namespace: node-webapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-webapp
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: node-webapp
    spec:
      containers:
        - image: finallcloudacr.azurecr.io/node-webapp:latest
          imagePullPolicy: Always
          name: node-webapp
          ports:
            - containerPort: 3000
              name: node-webapp
---
apiVersion: v1
kind: Service
metadata:
  name: node-webapp-internal-loadbalancer
  namespace: node-webapp
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: node-webapp
  type: ClusterIP
status:
  loadBalancer: {}


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-webapp-ingress
  namespace: node-webapp
  annotations:
    #app.kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: node-webapp.finall.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: node-webapp-internal-loadbalancer
                port:
                  number: 80
